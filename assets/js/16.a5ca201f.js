(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{373:function(t,a,s){"use strict";s.r(a);var e=s(45),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("h2",{attrs:{id:"目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#目录"}},[t._v("目录")])]),s("li",[s("a",{attrs:{href:"#场景"}},[t._v("场景")])]),s("li",[s("a",{attrs:{href:"#参考"}},[t._v("参考")])]),s("li",[s("a",{attrs:{href:"#lru-与-lfc-与-fifo"}},[t._v("LRU 与 LFC 与 FIFO")])]),s("li",[s("a",{attrs:{href:"#数据结构"}},[t._v("数据结构")])]),s("li",[s("a",{attrs:{href:"#面试提问"}},[t._v("面试提问")])]),s("li",[s("a",{attrs:{href:"#javascript-版-lru-cache"}},[t._v("Javascript 版 Lru-cache")]),s("ul",[s("li",[s("a",{attrs:{href:"#用法"}},[t._v("用法")])]),s("li",[s("a",{attrs:{href:"#options-配置项"}},[t._v("Options 配置项")])]),s("li",[s("a",{attrs:{href:"#api"}},[t._v("API")])])])]),s("li",[s("a",{attrs:{href:"#java-版-lru-cache"}},[t._v("Java 版 Lru-cache")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#场景"}},[t._v("#")]),t._v(" 场景")]),t._v(" "),s("p",[t._v("LruCache在网络请求，图片缓存等场景下都有使用")]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.jianshu.com/p/a7e3257e1996",target:"_blank",rel:"noopener noreferrer"}},[t._v("淘汰策略原理图"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://android.googlesource.com/platform/frameworks/support.git/+/795b97d901e1793dac5c3e67d43c96a758fec388/v4/java/android/support/v4/util/LruCache.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java v4源码地址"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("v4 是没有读写锁")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://android.googlesource.com/platform/frameworks/base/+/master/core/java/android/util/LruCache.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java v12 源码地址"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/isaacs/node-lru-cache/blob/master/index.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("js版本 源码地址"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("js 与 java 由于运行机制因此实现方式有所不同")])]),t._v(" "),s("h2",{attrs:{id:"lru-与-lfc-与-fifo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lru-与-lfc-与-fifo"}},[t._v("#")]),t._v(" LRU 与 LFC 与 FIFO")]),t._v(" "),s("ul",[s("li",[t._v("LRU(Least Recently Used) 最近最久未使用")]),t._v(" "),s("li",[t._v("LFU(Least Frequently Used) 最近最少使用算法")]),t._v(" "),s("li",[t._v("FIFO(First in First out) 先进先出")])]),t._v(" "),s("h2",{attrs:{id:"数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),s("p",[t._v("哈希双向链表")]),t._v(" "),s("ul",[s("li",[t._v("插入：O(1)")]),t._v(" "),s("li",[t._v("删除：O(1)")]),t._v(" "),s("li",[t._v("查询：O(1)")])]),t._v(" "),s("h2",{attrs:{id:"面试提问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试提问"}},[t._v("#")]),t._v(" 面试提问")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("为什么要用哈希双向链表")]),t._v(" "),s("p",[t._v("https://juejin.cn/post/6844904120462245901\n"),s("a",{attrs:{href:"https://segmentfault.com/a/1190000010345293",target:"_blank",rel:"noopener noreferrer"}},[t._v("单链表与双链表区别"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000024504131",target:"_blank",rel:"noopener noreferrer"}},[t._v("双链表"),s("OutboundLink")],1),t._v("\n单向链表：只有一个指向下一个节点的指针。")]),t._v(" "),s("p",[t._v("优点：单向链表增加删除节点简单。遍历时候不会死循环；")]),t._v(" "),s("p",[t._v("缺点：只能从头到尾遍历。只能找到后继，无法找到前驱，也就是只能前进。")]),t._v(" "),s("p",[t._v("适用于节点的增加删除。")]),t._v(" "),s("p"),t._v(" "),s("p",[t._v("双向链表：有两个指针，一个指向前一个节点，一个后一个节点。")]),t._v(" "),s("p",[t._v("优点：可以找到前驱和后继，可进可退；")]),t._v(" "),s("p",[t._v("缺点：增加删除节点复杂，需要多分配一个指针存储空间。")]),t._v(" "),s("p",[t._v("适用于需要双向查找节点值的情况。")]),t._v(" "),s("p",[t._v("1)首先我想的是用队列不行吗？\n不行队列只能做到先进先出，但是重复用到中间的数据时无法把中间的数据移动到顶端。")]),t._v(" "),s("p",[t._v("2)就用单链表不行吗？\n单链表能实现新来的放头部，最久不用的在尾部删除。但删除的时候需要遍历到尾部，因为单链表只有头指针。在用到已经用到过的数据时，还要遍历整合链表，来确定是否用过，然后再遍历到响应位置来剔除的节点，并重新放在头部。这效率可想而知。")]),t._v(" "),s("p",[t._v("这时hashmap的作用就出来了 他可以在单位1的时间判断value的值是否存在，key直接存储节点对象，能直接定位删除对应的节点(将比节点的父节点指向此节点的子节点)。")]),t._v(" "),s("p",[t._v("要通过一个节点直接获得父节点的话，通过单链表是不行的。\n这时双向链表的作用也提现出来了。能直接定位到父节点。 这效率就很高了。而且由于双向链表有尾指针，所以剔除最后的尾节点也十分方便，快捷。")])]),t._v(" "),s("h2",{attrs:{id:"javascript-版-lru-cache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-版-lru-cache"}},[t._v("#")]),t._v(" Javascript 版 Lru-cache")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("js 是用 yallist 的双链表库 以及 Map （哈希表）组成的hashMapLink")])]),t._v(" "),s("h3",{attrs:{id:"用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[t._v("#")]),t._v(" 用法")]),t._v(" "),s("div",{staticClass:"language-js {2, 8} extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LRU")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lru-cache"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      max"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("dispose")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" maxAge"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cache "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LRU")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" otherCache "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LRU")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sets just the max size")]),t._v("\n \ncache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "value"')]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// non-string keys ARE fully supported")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// but note that it must be THE SAME object, not")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// just a JSON-equivalent object.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" someObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ncache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a value'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Object keys are not toString()-ed")]),t._v("\ncache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[object Object]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a different value'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nassert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a value'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A similar object with same keys/values won't work,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// because it's a different object identity")]),t._v("\nassert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n \ncache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// empty the cache")]),t._v("\n")])])]),s("h3",{attrs:{id:"options-配置项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-配置项"}},[t._v("#")]),t._v(" Options 配置项")]),t._v(" "),s("h4",{attrs:{id:"max"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#max"}},[t._v("#")]),t._v(" max")]),t._v(" "),s("ul",[s("li",[t._v("类型 "),s("code",[t._v("number")])]),t._v(" "),s("li",[t._v("默认值 "),s("code",[t._v("Infinity")]),t._v(" "),s("code",[t._v("无穷大")])])]),t._v(" "),s("p",[t._v("通过将长度函数应用于缓存中的所有值来检查缓存的最大大小。\n没有设置它是很"),s("code",[t._v("愚蠢的")]),t._v("，因为这是这个库的全部目的，但是默认为```Infinity。 将其设置为非数字或负数将引发TypeError。 将其设置为0使其变为无穷大")]),t._v(" "),s("h4",{attrs:{id:"maxage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#maxage"}},[t._v("#")]),t._v(" maxAge")]),t._v(" "),s("ul",[s("li",[t._v("类型 "),s("code",[t._v("number")])]),t._v(" "),s("li",[t._v("默认值 "),s("code",[t._v("0")])])]),t._v(" "),s("p",[t._v("最大过期时间\n即使过期，程序也不会主动去删除它（某个过期值）；只有在你试图获取一个过期值时。才会删除它，并返回 undefined")]),t._v(" "),s("h4",{attrs:{id:"length"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#length"}},[t._v("#")]),t._v(" length")]),t._v(" "),s("ul",[s("li",[t._v("类型 "),s("code",[t._v("Function")]),t._v(" "),s("ul",[s("li",[t._v("参数：\n"),s("ul",[s("li",[t._v("{any} value")]),t._v(" "),s("li",[t._v("{number} key")])])])])]),t._v(" "),s("li",[t._v("默认值 "),s("code",[t._v("function(){return 1}")])])]),t._v(" "),s("p",[t._v("用于计算存储项的长度。")]),t._v(" "),s("p",[t._v("如果你要存储"),s("code",[t._v("strings or buffers")]),t._v("等数据，那么你可能想做一些类似"),s("code",[t._v("function(value, key){return value.length}")]),t._v("的事情;")]),t._v(" "),s("p",[t._v("默认会用"),s("code",[t._v("function(){return 1}")]),t._v(", 适用于你用来存储与 max 类似同样等级的size 的;\nvalue 作为第一个参数，key 作为第二个参数")]),t._v(" "),s("h4",{attrs:{id:"dispose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dispose"}},[t._v("#")]),t._v(" dispose")]),t._v(" "),s("ul",[s("li",[t._v("类型 "),s("code",[t._v("Function")]),t._v(" (key, value)\n"),s("ul",[s("li",[t._v("参数：\n"),s("ul",[s("li",[t._v("{number} key")]),t._v(" "),s("li",[t._v("{any} value")])])])])]),t._v(" "),s("li",[t._v("默认值 "),s("code",[t._v("无")]),t._v(" "),s("ul",[s("li",[t._v("可不设置")])])])]),t._v(" "),s("p",[t._v("当从缓存中删除项时或者改变时 的钩子函数\n它在从内部缓存中移除项之前被调用；所以如果你想立即把它放回去，你需要在nextTick或setTimeout回调中做这个，否则它不会做任何事。")]),t._v(" "),s("h4",{attrs:{id:"stale"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stale"}},[t._v("#")]),t._v(" stale")]),t._v(" "),s("ul",[s("li",[t._v("类型 "),s("code",[t._v("Boolean")])]),t._v(" "),s("li",[t._v("默认值 "),s("code",[t._v("false")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("true")]),t._v("  当已超过"),s("code",[t._v("maxAge")]),t._v("时，能取到"),s("code",[t._v("过时")]),t._v("的值 get(key)；")]),t._v(" "),s("li",[s("code",[t._v("false")]),t._v(" 它将返回"),s("code",[t._v("undefined")]),t._v("，就好像它已经被删除了一样\n当做"),s("code",[t._v("get(key)")]),t._v("操作时，是否返回需要返回过期的值")])])])]),t._v(" "),s("h4",{attrs:{id:"nodisposeonset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodisposeonset"}},[t._v("#")]),t._v(" noDisposeOnSet")]),t._v(" "),s("ul",[s("li",[t._v("类型 "),s("code",[t._v("Boolean")])]),t._v(" "),s("li",[t._v("默认值 "),s("code",[t._v("false")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("true")]),t._v(" "),s("code",[t._v("dispose()")]),t._v("只会在键从缓存中掉出来时调用")]),t._v(" "),s("li",[s("code",[t._v("false")]),t._v(" 如果您设置了"),s("code",[t._v("dispose()")]),t._v("方法，那么当"),s("code",[t._v("set()")]),t._v("操作覆盖现有的键时，就会调用该方法")])])])]),t._v(" "),s("p",[t._v("默认情况下，如果您设置了"),s("code",[t._v("dispose()")]),t._v("方法，那么当set()操作覆盖现有的键时，就会调用该方法。如果"),s("strong",[t._v("设置了这个选项")]),t._v("，则"),s("code",[t._v("dispose()")]),t._v("只会在键从缓存中掉出来时调用，"),s("strong",[t._v("而不会在键被覆盖时调用")])]),t._v(" "),s("h4",{attrs:{id:"updateageonget"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#updateageonget"}},[t._v("#")]),t._v(" updateAgeOnGet")]),t._v(" "),s("ul",[s("li",[t._v("类型 "),s("code",[t._v("Boolean")])]),t._v(" "),s("li",[t._v("默认值 "),s("code",[t._v("false")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("true")]),t._v(" 会在 get cache操作的时候更新为当前时间 Date.Now(),从而使其不会过期")]),t._v(" "),s("li",[s("code",[t._v("false")]),t._v(" 不会在 get cache操作的时候更新为当前时间")])])])]),t._v(" "),s("p",[t._v("当与"),s("code",[t._v("maxAge")]),t._v("一起使用时间过期条目时，将此设置为"),s("code",[t._v("true")]),t._v("将使当前项的有效时间从缓存中检索时更新为当前时间")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("当然，它仍然可以根据最近的使用情况从缓存中退出。")])]),t._v(" "),s("h3",{attrs:{id:"api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("recently used")]),t._v(" "),s("p",[t._v("当前key的最近使用时间，与maxAge配合使用")])]),t._v(" "),s("h4",{attrs:{id:"set-key-value-maxage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-key-value-maxage"}},[t._v("#")]),t._v(" set(key, value, maxAge)")]),t._v(" "),s("h4",{attrs:{id:"get-key-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-key-value"}},[t._v("#")]),t._v(" get(key) => value")]),t._v(" "),s("p",[t._v("两者都会更新当前key在cache里的"),s("code",[t._v("recently used")]),t._v("的存活时间\nmaxAge是可选的，如果提供的话会覆盖cache maxAge默认值")]),t._v(" "),s("h4",{attrs:{id:"peek-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#peek-key"}},[t._v("#")]),t._v(" peek(key)")]),t._v(" "),s("p",[t._v("返回 key 对于的值（可能没有找到），不能更新这个key的"),s("code",[t._v("recently used")]),t._v("存活时间")]),t._v(" "),s("h4",{attrs:{id:"del-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#del-key"}},[t._v("#")]),t._v(" del(key)")]),t._v(" "),s("p",[t._v("从缓存cache中删除key")]),t._v(" "),s("h4",{attrs:{id:"reset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reset"}},[t._v("#")]),t._v(" reset")]),t._v(" "),s("p",[t._v("完全清除缓存，丢弃所有值; 重新new Map 与链表")]),t._v(" "),s("h4",{attrs:{id:"has-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#has-key"}},[t._v("#")]),t._v(" has(key)")]),t._v(" "),s("p",[t._v("去检索cache中是否有key, 且不会更新"),s("code",[t._v("recently used")]),t._v("的存活时间")]),t._v(" "),s("h4",{attrs:{id:"foreach-function-value-key-cache-thisp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foreach-function-value-key-cache-thisp"}},[t._v("#")]),t._v(" forEach(function(value,key,cache), [thisp])")]),t._v(" "),s("p",[t._v("与Array.prototype.forEach 类似，按最近的顺序遍历缓存cache中的所有键key。c")]),t._v(" "),s("h4",{attrs:{id:"rforeach-function-value-key-cache-thisp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rforeach-function-value-key-cache-thisp"}},[t._v("#")]),t._v(" rforEach(function(value,key,cache), [thisp])")]),t._v(" "),s("p",[t._v("(reverseForeach)")]),t._v(" "),s("p",[t._v("与cache.forEach 类似, 但是项的迭代顺序是相反的。(例如，最少使用的条目会先进行迭代。)")]),t._v(" "),s("h4",{attrs:{id:"keys"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keys"}},[t._v("#")]),t._v(" keys")]),t._v(" "),s("p",[t._v("返回cache 中的key值数组 Array")]),t._v(" "),s("h4",{attrs:{id:"length-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#length-2"}},[t._v("#")]),t._v(" length")]),t._v(" "),s("p",[t._v("考虑到"),s("code",[t._v("length")]),t._v("选项函数，返回缓存中对象的总长度")]),t._v(" "),s("h4",{attrs:{id:"itemcount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#itemcount"}},[t._v("#")]),t._v(" itemCount")]),t._v(" "),s("ul",[s("li",[t._v("stale 为true时，会把过期数据计算在内")]),t._v(" "),s("li",[t._v("stale 为false时，不会把过期数据计算在内\n返回当前缓存中对象的总数。注意，过期的(请参阅选项 stale)项将作为该项计数的一部分返回")])]),t._v(" "),s("h4",{attrs:{id:"dump"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dump"}},[t._v("#")]),t._v(" dump()")]),t._v(" "),s("p",[t._v("返回一个缓存条目数组，以备序列化并与"),s("code",[t._v("destinationCache.load(arr)")]),t._v("一起使用。")]),t._v(" "),s("h4",{attrs:{id:"load-cacheentriesarray"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#load-cacheentriesarray"}},[t._v("#")]),t._v(" load(cacheEntriesArray)")]),t._v(" "),s("p",[t._v("与dump 配合使用，\n在加载新条目之前，将重置目标缓存")]),t._v(" "),s("h4",{attrs:{id:"prune"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prune"}},[t._v("#")]),t._v(" prune()")]),t._v(" "),s("p",[t._v("手动遍历整个缓存，主动删除过期项")]),t._v(" "),s("h2",{attrs:{id:"java-版-lru-cache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-版-lru-cache"}},[t._v("#")]),t._v(" Java 版 Lru-cache")]),t._v(" "),s("p",[t._v("编写中")])])}),[],!1,null,null,null);a.default=n.exports}}]);